doGet <- function(uri, queryParams) {
doGet <- function(uri, queryParams) {
jj
exit
quit
source('C:/Users/Alfred/Dropbox/Technology Hatchery Inc/technical/Git/renjin-examples/appengine-simple/src/main/webapp/WEB-INF/app.R', echo=TRUE)
doGet <- function(uri, queryParams) {
output = ""
output = paste(
output,
"<!DOCTYPE html>
<html>
<body>")
output = paste(output,"<b>Here are some evaluations.  Valid functions are name, sin, cos and tan:</b> <br /><br />")
if(!is.null(queryParams$name)) {
output = paste(output,"Hello", queryParams$name,"<br />")
}
if(!is.null(queryParams$sin)) {
output = paste(output,"sin(",queryParams$sin,")=",sin(as.numeric(queryParams$sin)),"<br />")
}
if(!is.null(queryParams$cos)) {
output = paste(output,"cos(",queryParams$cos,")=",cos(as.numeric(queryParams$cos)),"<br />")
}
if(!is.null(queryParams$tan)) {
output = paste(output,"tan(",queryParams$tan,")=",tan(as.numeric(queryParams$tan)),"<br />")
}
output = paste(
output,
"</body>
</html>")
return(output)
}
doGet <- function(uri, queryParams) {
output = ""
output = paste(
output,
"<!DOCTYPE html>
<html>
<body>")
output = paste(output,"<b>Here are some evaluations.  Valid functions are name, sin, cos and tan:</b> <br /><br />")
if(!is.null(queryParams$name)) {
output = paste(output,"Hello", queryParams$name,"<br />")
}
if(!is.null(queryParams$sin)) {
output = paste(output,"sin(",queryParams$sin,")=",sin(as.numeric(queryParams$sin)),"<br />")
}
if(!is.null(queryParams$cos)) {
output = paste(output,"cos(",queryParams$cos,")=",cos(as.numeric(queryParams$cos)),"<br />")
}
if(!is.null(queryParams$tan)) {
output = paste(output,"tan(",queryParams$tan,")=",tan(as.numeric(queryParams$tan)),"<br />")
}
output = paste(
output,
"</body>
</html>")
return(output)
}
doGet <- function(uri, queryParams) {
doGet <- function(uri, queryParams) {
output = ""
output = paste(
output,
"<!DOCTYPE html>
<html>
<body>")
output = paste(output,"<b>Here are some evaluations.  Valid functions are name, sin, cos and tan:</b> <br /><br />")
if(!is.null(queryParams$name)) {
output = paste(output,"Hello", queryParams$name,"<br />")
}
if(!is.null(queryParams$sin)) {
output = paste(output,"sin(",queryParams$sin,")=",sin(as.numeric(queryParams$sin)),"<br />")
}
if(!is.null(queryParams$cos)) {
output = paste(output,"cos(",queryParams$cos,")=",cos(as.numeric(queryParams$cos)),"<br />")
}
if(!is.null(queryParams$tan)) {
output = paste(output,"tan(",queryParams$tan,")=",tan(as.numeric(queryParams$tan)),"<br />")
}
output = paste(
output,
"</body>
</html>")
return(output)
}
x = list("ev1"=10, "ev2"=15, "rv"="Group 1")
x$ev1
queryParams = list("name"="Alfred","sin"=0,"cos"=0,"tan"=1.55)
doGet(uri,queryParams)
install.packages("shiny")
jsonData <- fromJSON(lines)
library("jsonlite", lib.loc="C:/Users/Alfred/Dropbox/Documents/R/win-library/3.1")
library("jsonlite")
file_path <- paste(getwd(),"../../../../../json/Survey.json",sep="/")
source('~/.active-rstudio-document', echo=TRUE)
file_path <- paste(getwd(),"../../../../../json/Survey.json",sep="/")
file_con = file(description = file_path, open = "r", blocking = TRUE, encoding = getOption("encoding"), raw = FALSE)
file_path
file_path <- "../../../../../json/Survey.json"
file_con = file(description = file_path, open = "r", blocking = TRUE, encoding = getOption("encoding"), raw = FALSE)
file_path <- "../../../../../json/mobinsight/Survey.json"
file_con = file(description = file_path, open = "r", blocking = TRUE, encoding = getOption("encoding"), raw = FALSE)
lines = readLines(con = file_con, n = -1L, ok = TRUE, warn = TRUE, encoding = "unknown", skipNul = FALSE)
jsonData <- fromJSON(lines)
jsonData
jsonData$questions
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
responses
responses
responses$questions
print(responses$questions)
print.data.frame(responses$questions)
responses$questions[0]
responses$questions[1]
responses$questions[2]
responses$questions[3]
responses$questions[4]
responses$questions[5]
responses$questions[6]
responses$questions[4]
responses$questions[3]
responses$questions[1]
responses$questions[1]
responses
responses$questions$answers
?googleVis
library("googleVis", lib.loc="C:/Users/Alfred/Dropbox/Documents/R/win-library/3.1")
?googleVis
vignette("googleVis")
data(Fruits)
Fruits
M <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
str(M)
M
M
print(M,tag=chart)
print(M,tag='chart')
plot(M)
?install
?library
install.packages("C:\Users\Alfred\Dropbox\Technology Hatchery Inc\technical\Git\slidify\slidify.Rproj", repos = NULL, type="source")
install.packages("C:/Users/Alfred/Dropbox/Technology Hatchery Inc/technical/Git/slidify/slidify.Rproj", repos = NULL, type="source")
install.packages("devtools")
library("devtools", lib.loc="C:/Users/Alfred/Dropbox/Documents/R/win-library/3.1")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
?slidify
install.packages("e1071")
install.packages("kernlab")
install.packages("klaR")
install.packages("svmpath")
